version: '3.4'

services:
  frontend_prod:
    build:
      context: schedule-frontend
      dockerfile: prod.dockerfile
    ports:
     - '80:80'
    expose:
     - '80'
    depends_on:
      - backend_prod
    links:
      - backend_prod:backend

  database_prod:
    image: mysql:5.7
    restart: on-failure
    environment:
      - "MYSQL_DATABASE=scheduleapp"
      - "MYSQL_PASSWORD=root"
      - "MYSQL_ROOT_PASSWORD=root"

  backend_prod:
    build:
      context: schedule-backend
      dockerfile: prod.dockerfile
    working_dir: /usr/src/backend
    volumes:
      - ./schedule-backend/:/usr/src/backend
    ports:
      - '8080:8080'
    expose:
      - '8080'
    command: mvn spring-boot:run
    links:
      - database_prod:mysql

  # Portainer
  portainer:
    image: portainer/portainer
    container_name: portainer_fiware
    restart: on-failure
    ports:
      - "9999:9000"
      - "8008:8081"
    volumes:
      - type: volume
        source: vol_portainer_data
        target: /data
      - type: bind
        source: /usr/bin/docker
        target: /usr/bin/docker
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock


volumes:
  vol_portainer_data:
